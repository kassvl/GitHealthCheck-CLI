[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "repo-health-analyzer"
version = "0.1.0"
description = "Offline CLI/desktop tool to analyze local git repos for code quality, architecture, smells, tests, docs, and sustainability."
readme = "README.md"
authors = [{ name = "Repo Health Analyzer Team" }]
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["git", "static-analysis", "code-quality", "architecture", "ml", "offline"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Environment :: Console",
]

# Keep dependencies offline-friendly; no external APIs.
# Avoid external analyzers; implement custom heuristics.
# Some deps are optional at runtime.
[project.dependencies]
# CLI and UX
rich = ">=13.7.0"
typer = {version = ">=0.12.3", extras=["all"]}
# Core
GitPython = ">=3.1.43"
pydantic = ">=2.7.0"
PyYAML = ">=6.0.1"
tqdm = ">=4.66.0"
networkx = ">=3.3"
# Visualization (optional at runtime; we'll handle missing gracefully)
graphviz = ">=0.20.3"
# ML (training optional; prediction uses light-weight math)
scikit-learn = ">=1.4.0"
numpy = ">=1.26.0"
scipy = ">=1.12.0"

[project.optional-dependencies]
# For development and tests
dev = [
  "pytest>=8.2.0",
  "pytest-cov>=5.0.0",
  "black>=24.4.0",
  "flake8>=7.0.0",
  "mypy>=1.10.0"
]

[project.scripts]
rha = "repo_health_analyzer.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["repo_health_analyzer*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"

[tool.black]
line-length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
