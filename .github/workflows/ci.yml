name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        flake8 repo_health_analyzer/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 repo_health_analyzer/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Type check with mypy
      run: |
        mypy repo_health_analyzer/
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=repo_health_analyzer --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install RHA
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test CLI installation
      run: |
        rha --help
        rha version
    
    - name: Run demo analysis
      run: |
        # Create a simple test repo
        mkdir test_repo
        cd test_repo
        git init
        git config user.email "test@example.com"
        git config user.name "Test User"
        echo "print('hello')" > main.py
        git add .
        git commit -m "Initial commit"
        
        # Run analysis
        rha validate .
        rha analyze . --verbose --format summary
    
    - name: Verify output files
      run: |
        cd test_repo
        ls -la *.txt *.json || echo "No output files found"

  build:
    runs-on: ubuntu-latest
    needs: [test, integration]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
